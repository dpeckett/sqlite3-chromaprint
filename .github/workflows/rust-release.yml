name: Rust Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      
      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install -y libsqlite3-dev gcc-aarch64-linux-gnu
      
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install sqlite3
      
      - name: Build
        run: cargo build --release
      
      - name: Extract Architecture
        run: echo "ARCH=$(echo ${{ matrix.target }} | cut -d'-' -f1)" >> $GITHUB_ENV
      
      - name: Rename Binaries (Unix Like)
        if: runner.os != 'Windows'
        run: |
          mv target/release/libsqlite3_chromaprint.so target/release/libsqlite3_chromaprint-${{ env.ARCH }}.so || true
          mv target/release/libsqlite3_chromaprint.dylib target/release/libsqlite3_chromaprint-${{ env.ARCH }}.dylib || true

      - name: Rename Binaries (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if ($env:ARCH -eq 'x86_64') {
            Rename-Item -Path target/release/sqlite3_chromaprint.dll -NewName sqlite3_chromaprint-x86_64.dll
          }
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries-${{ matrix.target }}
          path: |
            target/release/*.so
            target/release/*.dylib
            target/release/*.dll

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
