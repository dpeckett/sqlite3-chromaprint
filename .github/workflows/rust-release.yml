name: Rust Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      
      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install -y libsqlite3-dev
      
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install sqlite3
      
      - name: Build
        run: cargo build --release
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries-${{ matrix.os }}
          path: |
            target/release/libsqlite3_chromaprint.so
            target/release/libsqlite3_chromaprint.dylib
            target/release/sqlite3_chromaprint.dll

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
